const section3 = [
  { episode: '모듈 소개', duration: '01:20' },
  { episode: '기본 설치 소개', duration: '02:32' },
  {
    episode: '파일 기반 라우팅과 리액트 서버 컴포넌트의 이해',
    duration: '02:45',
  },
  { episode: '파일 시스템을 통한 추가 경로 추가', duration: '03:06' },
  { episode: '페이지 간 이동—옳고 그른 해결책', duration: '04:12' },
  { episode: '페이지 및 레이아웃 작업하기', duration: '03:22' },
  {
    episode: '보호된 파일명, 커스텀 컴포넌트 및 NextJS 프로젝트 정리 방법',
    duration: '06:31',
  },
  { episode: '보호된 파일명', duration: '01:00' },
  {
    episode: '동적 경로 환경설정 및 경로 매개 변수 사용 방법',
    duration: '06:17',
  },
  { episode: '주요 프로젝트를 향해: 미식가(Foodies) 앱', duration: '01:24' },
  { episode: '연습문제: 작업 내용', duration: '02:03' },
  { episode: '연습문제: 해답', duration: '08:19' },
  { episode: '레이아웃 개념 다시 보기', duration: '03:50' },
  { episode: '레이아웃에 커스텀 컴포넌트 추가', duration: '05:58' },
  { episode: 'NextJS 디자인: 옵션 및 CSS 모듈 사용', duration: '06:00' },
  { episode: 'NextJS 이미지 컴포넌트를 통한 이미지 최적화', duration: '04:57' },
  { episode: '기타 커스텀 컴포넌트 사용', duration: '03:48' },
  { episode: '시작 페이지 내용 채우기', duration: '04:18' },
  { episode: '이미지 슬라이드쇼 준비', duration: '03:25' },
  {
    episode:
      '리액트 서버 컴포넌트 vs 클라이언트 컴포넌트 – 적절한 사용 선택 방법',
    duration: '08:15',
  },
  { episode: '클라이언트 컴포넌트의 효율적 사용', duration: '11:07' },
  { episode: 'Meals 데이터와 규격이 불분명한 이미지 출력', duration: '10:31' },
  { episode: 'SQLite 데이터베이스 설정', duration: '03:11' },
  {
    episode: 'NextJS 및 풀스택 기능을 활용한 데이터 불러오기',
    duration: '07:17',
  },
  { episode: '로딩 페이지 추가', duration: '04:00' },
  {
    episode: 'Suspense & Streamed Response를 이용한 세분화 로딩 상태 관리',
    duration: '05:54',
  },
  { episode: '오류 처리 방법', duration: '05:22' },
  { episode: '‘Not Found’ 상태 처리 방법', duration: '01:57' },
  {
    episode: '동적 경로와 경로 매개변수를 활용한 Meals 세부내용 로딩 및 렌더링',
    duration: '11:03',
  },
  { episode: '개별 Meals에 대한 Not Found 오류 전송', duration: '02:03' },
  { episode: '‘Share Meal’ 양식 사용에 대한 기초', duration: '01:53' },
  {
    episode: '커스텀 이미지 피커(선택 도구) 입력 컴포넌트에 대한 기초',
    duration: '08:28',
  },
  { episode: '피커에 이미지 미리보기 추가', duration: '05:59' },
  { episode: '이미지 피커 컴포넌트 개선하기', duration: '00:38' },
  {
    episode: '양식 제출 처리를 위한 서버 액션 소개 및 사용 방법',
    duration: '09:02',
  },
  { episode: '개별 파일에 서버 액션 저장', duration: '03:45' },
  {
    episode: 'XSS 보호를 위한 슬러그 생성 및 유저 입력 무결 처리하기',
    duration: '03:20',
  },
  {
    episode: '업로드 된 이미지 저장 및 데이터베이스에 데이터 저장',
    duration: '12:56',
  },
  { episode: 'useFormStatus를 이용한 양식 제출 상태 관리', duration: '05:30' },
  { episode: '서버 사이드 입력 유효성 확인 추가 방법', duration: '05:54' },
  { episode: '서버 행동 응답 및 useFormState 작업', duration: '08:05' },
  { episode: 'NextJS 캐싱 구축 및 이해', duration: '06:06' },
  { episode: '캐시 유효성 재확인 트리거', duration: '03:57' },
  { episode: '로컬 Filesystem에 파일 저장 금지!', duration: '02:13' },
  {
    episode: '보너스: 업로드한 이미지를 클라우드에 저장하기(AWS S3)',
    duration: '11:00',
  },
  { episode: '정적 메타데이터 추가', duration: '03:47' },
  { episode: '동적 메타데이터 추가', duration: '02:20' },
  { episode: '모듈 요약', duration: '04:25' },
];

const section4 = [
  { episode: 'App Router에서 Page Router까지', duration: '01:38' },
  { episode: '코드 스냅샷 사용하기', duration: '00:31' },
  { episode: '모듈 개요', duration: '01:12' },
  { episode: '시작 설정', duration: '01:19' },
  {
    episode: '“파일 기반 라우팅”이란 무엇인가? 이게 왜 유용한 걸까?',
    duration: '05:22',
  },
  { episode: '첫 번째 페이지 추가하기', duration: '04:01' },
  { episode: '이름이 붙은 / 정적 라우트 파일 추가하기', duration: '01:34' },
  { episode: '중첩 경로 & 라우트로 작업하기', duration: '03:33' },
  { episode: '동적 경로 & 라우트 추가하기', duration: '04:54' },
  {
    episode: '동적 경로 세그먼트 데이터 추출하기 (동적 라우트)',
    duration: '04:54',
  },
  { episode: '중첩된 동적 라우트 & 경로 구축하기', duration: '07:12' },
  { episode: 'Catch-All 라우트 추가하기', duration: '05:44' },
  { episode: '“Link” 컴포넌트로 내비게이팅하기', duration: '05:44' },
  { episode: '동적 라우트로 내비게이팅하기', duration: '03:41' },
  { episode: 'Link Href를 설정하는 다른 방법', duration: '02:55' },
  { episode: '프로그래밍 방식으로 내비게이팅하기', duration: '03:50' },
  { episode: '커스텀 404 페이지 추가하기', duration: '01:35' },
  { episode: '모듈 요약', duration: '05:51' },
  { episode: '모듈 리소스', duration: '00:33' },
];
